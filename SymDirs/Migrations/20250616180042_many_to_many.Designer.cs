// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SymDirs.Db;

#nullable disable

namespace SymDirs.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20250616180042_many_to_many")]
    partial class many_to_many
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("DbFileSyncedConfigDirectory", b =>
                {
                    b.Property<string>("DbFileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SyncedWithId")
                        .HasColumnType("TEXT");

                    b.HasKey("DbFileId", "SyncedWithId");

                    b.HasIndex("SyncedWithId");

                    b.ToTable("DbFileSyncedConfigDirectory");
                });

            modelBuilder.Entity("SymDirs.Db.DbFile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("ByteSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<ulong?>("InodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSync")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FullPath");

                    b.HasIndex("LastSync");

                    b.HasIndex("LastSync", "FullPath");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("SymDirs.Syncing.SyncedConfigDirectory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSourceDirectory")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SyncedConfigDirectories");
                });

            modelBuilder.Entity("DbFileSyncedConfigDirectory", b =>
                {
                    b.HasOne("SymDirs.Db.DbFile", null)
                        .WithMany()
                        .HasForeignKey("DbFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SymDirs.Syncing.SyncedConfigDirectory", null)
                        .WithMany()
                        .HasForeignKey("SyncedWithId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
